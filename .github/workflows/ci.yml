name: GitHub CI

on:
-   push
-   pull_request

jobs:
    windowsBuild:
        name: Windows Build
        runs-on: windows-latest
        env:
            BUILD_PROJECT: llvm
            BUILD_MASTER: false
            LLVM_VERSION: 17.0.6

        strategy:
            fail-fast: false
            matrix:
                CRT:
                -   msvcrt
                -   libcmt

                TARGET_CPU:
                -   x86
                -   amd64

                CONFIGURATION:
                -   Debug
                -   Release

        steps:
        - name: Setup Windows
          uses: llvm/actions/setup-windows@main
          with:
            arch: ${{matrix.TARGET_CPU}}

        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.11'

        - name: Setup ccache
          uses: hendrikmuhs/ccache-action@v1
          with:
            # A full build of llvm, clang, lld, and lldb takes about 250MB
            # of ccache space. There's not much reason to have more than this,
            # because we usually won't need to save cache entries from older
            # builds.  Also, there is an overall 10GB cache limit, and each
            # run creates a new cache entry so we want to ensure that we have
            # enough cache space for all the tests to run at once and still
            # fit under the 10 GB limit.
            max-size: 500M
            key: sccache-${{ matrix.os }}
            variant: sccache

        -   name: Checkout repo
            uses: actions/checkout@v3

        -   name: Install
            shell: cmd
            run: |
                call %GITHUB_WORKSPACE%\set-env.bat msvc17 ${{matrix.CRT}} ${{matrix.TARGET_CPU}} ${{matrix.CONFIGURATION}}
                call %GITHUB_WORKSPACE%\install.bat

        -   name: Build and test
            id: BUILD
            shell: cmd
            run: |
                call %GITHUB_WORKSPACE%\set-env.bat msvc17 ${{matrix.CRT}} ${{matrix.TARGET_CPU}} ${{matrix.CONFIGURATION}}
                call %GITHUB_WORKSPACE%\build.bat
                echo ::set-output name=DEPLOY_FILE::%DEPLOY_FILE%

        -   name: Release
            uses: softprops/action-gh-release@v1
            if: startsWith(github.ref, 'refs/tags/')
            with:
                files: ${{steps.BUILD.outputs.DEPLOY_FILE}}
